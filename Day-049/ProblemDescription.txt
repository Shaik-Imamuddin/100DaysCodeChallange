DESCRIPTION:

Character recognition software is widely used to digitise printed texts. Thus the texts can be edited, searched and stored on a computer.

When documents (especially pretty old ones written with a typewriter), are digitised character recognition softwares often make mistakes.

Your task is correct the errors in the digitised text. You only have to handle the following mistakes:

S is misinterpreted as 5
O is misinterpreted as 0
I is misinterpreted as 1

The test cases contain numbers only by mistake.

#Sample Tests

Input:L0ND0N
Output:LONDON

Input:DUBL1N
Output:DUBLIN

Input:51NGAP0RE
Output:SINGAPORE

Input:BUDAPE5T
Output:BUDAPEST

Input:PAR15
Output:PARIS

Time Complexity:

In CharecterRecognitionSoftware.py

the time complexity for the first approach is O(n^2) due to the nested replace() calls within a loop,
while the time complexity for the second approach is O(n) due to the sequential replace() operations.