DESCRIPTION:

Jack really likes his number five: the trick here is that you have to multiply each number by 5 raised to the number of digits of each numbers, so, for example:

sample tests and Explanation:

  3 -->    15  (  3 * 5¹)
 10 -->   250  ( 10 * 5²)
200 --> 25000  (200 * 5³)
  0 -->     0  (  0 * 5¹)
 -3 -->   -15  ( -3 * 5¹)


Time Complexity:

In MultiplyTheNumber.py

In all three methods, the dominant factor contributing to the time complexity is the conversion of the number to a string, which takes O(log(n)) time. Therefore, the overall time complexity of all methods is O(log(n)).